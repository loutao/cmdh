package com.njucm.cmdh.app.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.njucm.cmdh.app.domain.FoodFeature;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table FOOD_FEATURE.
*/
public class FoodFeatureDao extends AbstractDao<FoodFeature, Long> {

    public static final String TABLENAME = "FOOD_FEATURE";

    /**
     * Properties of entity FoodFeature.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Eatingfeatureid = new Property(1, Integer.class, "eatingfeatureid", false, "EATINGFEATUREID");
        public final static Property Eatinghabitsdetermine = new Property(2, String.class, "eatinghabitsdetermine", false, "EATINGHABITSDETERMINE");
        public final static Property EatingHabitAnalysis = new Property(3, String.class, "EatingHabitAnalysis", false, "EATING_HABIT_ANALYSIS");
        public final static Property Averageenergyintake = new Property(4, Double.class, "averageenergyintake", false, "AVERAGEENERGYINTAKE");
        public final static Property Energyintakeunit = new Property(5, String.class, "energyintakeunit", false, "ENERGYINTAKEUNIT");
        public final static Property Averagemoistureintake = new Property(6, Double.class, "averagemoistureintake", false, "AVERAGEMOISTUREINTAKE");
        public final static Property Moistureintakeunit = new Property(7, String.class, "moistureintakeunit", false, "MOISTUREINTAKEUNIT");
        public final static Property Averageproteinintake = new Property(8, Double.class, "averageproteinintake", false, "AVERAGEPROTEININTAKE");
        public final static Property Proteinintakeunit = new Property(9, String.class, "proteinintakeunit", false, "PROTEININTAKEUNIT");
        public final static Property Averagefatintake = new Property(10, Double.class, "averagefatintake", false, "AVERAGEFATINTAKE");
        public final static Property Fatintakeunit = new Property(11, String.class, "fatintakeunit", false, "FATINTAKEUNIT");
        public final static Property Averagefiberintake = new Property(12, Double.class, "averagefiberintake", false, "AVERAGEFIBERINTAKE");
        public final static Property Fiberintakeunit = new Property(13, String.class, "fiberintakeunit", false, "FIBERINTAKEUNIT");
        public final static Property Averagecarbohydrateintake = new Property(14, Double.class, "averagecarbohydrateintake", false, "AVERAGECARBOHYDRATEINTAKE");
        public final static Property Carbohydrateintakeunit = new Property(15, String.class, "carbohydrateintakeunit", false, "CARBOHYDRATEINTAKEUNIT");
        public final static Property Averagevitaminaintake = new Property(16, Double.class, "averagevitaminaintake", false, "AVERAGEVITAMINAINTAKE");
        public final static Property Vitaminaintakeunit = new Property(17, String.class, "vitaminaintakeunit", false, "VITAMINAINTAKEUNIT");
        public final static Property Averagevitaminb1intake = new Property(18, Double.class, "averagevitaminb1intake", false, "AVERAGEVITAMINB1INTAKE");
        public final static Property Vitaminb1intakeunit = new Property(19, String.class, "vitaminb1intakeunit", false, "VITAMINB1INTAKEUNIT");
        public final static Property Averagevitaminb2intake = new Property(20, Double.class, "averagevitaminb2intake", false, "AVERAGEVITAMINB2INTAKE");
        public final static Property Vitaminb2intakeunit = new Property(21, String.class, "vitaminb2intakeunit", false, "VITAMINB2INTAKEUNIT");
        public final static Property Averagevitaminb6intake = new Property(22, Double.class, "averagevitaminb6intake", false, "AVERAGEVITAMINB6INTAKE");
        public final static Property Vitaminb6intakeunit = new Property(23, String.class, "vitaminb6intakeunit", false, "VITAMINB6INTAKEUNIT");
        public final static Property Averagevitaminb12intake = new Property(24, Double.class, "averagevitaminb12intake", false, "AVERAGEVITAMINB12INTAKE");
        public final static Property Vitaminb12intakeunit = new Property(25, String.class, "vitaminb12intakeunit", false, "VITAMINB12INTAKEUNIT");
        public final static Property Averagevitamincintake = new Property(26, Double.class, "averagevitamincintake", false, "AVERAGEVITAMINCINTAKE");
        public final static Property Vitamincintakeunit = new Property(27, String.class, "vitamincintakeunit", false, "VITAMINCINTAKEUNIT");
        public final static Property Averagevitamindintake = new Property(28, Double.class, "averagevitamindintake", false, "AVERAGEVITAMINDINTAKE");
        public final static Property Vitamindintakeunit = new Property(29, String.class, "vitamindintakeunit", false, "VITAMINDINTAKEUNIT");
        public final static Property Averagevitamineintake = new Property(30, Double.class, "averagevitamineintake", false, "AVERAGEVITAMINEINTAKE");
        public final static Property Vitamineintakeunit = new Property(31, String.class, "vitamineintakeunit", false, "VITAMINEINTAKEUNIT");
        public final static Property Averagevitaminkintake = new Property(32, Double.class, "averagevitaminkintake", false, "AVERAGEVITAMINKINTAKE");
        public final static Property Vitaminkintakeunit = new Property(33, String.class, "vitaminkintakeunit", false, "VITAMINKINTAKEUNIT");
        public final static Property Averagenicotinicacidintake = new Property(34, Double.class, "averagenicotinicacidintake", false, "AVERAGENICOTINICACIDINTAKE");
        public final static Property Nicotinicacidintakeunit = new Property(35, String.class, "nicotinicacidintakeunit", false, "NICOTINICACIDINTAKEUNIT");
        public final static Property Averagefolateintake = new Property(36, Double.class, "averagefolateintake", false, "AVERAGEFOLATEINTAKE");
        public final static Property Folateintakeunit = new Property(37, String.class, "folateintakeunit", false, "FOLATEINTAKEUNIT");
        public final static Property Averagesodiumintake = new Property(38, Double.class, "averagesodiumintake", false, "AVERAGESODIUMINTAKE");
        public final static Property Sodiumintakeunit = new Property(39, String.class, "sodiumintakeunit", false, "SODIUMINTAKEUNIT");
        public final static Property Averagecalciumintake = new Property(40, Double.class, "averagecalciumintake", false, "AVERAGECALCIUMINTAKE");
        public final static Property Calciumintakeunit = new Property(41, String.class, "calciumintakeunit", false, "CALCIUMINTAKEUNIT");
        public final static Property Averageironintake = new Property(42, Double.class, "averageironintake", false, "AVERAGEIRONINTAKE");
        public final static Property Ironintakeunit = new Property(43, String.class, "ironintakeunit", false, "IRONINTAKEUNIT");
        public final static Property Averagepotassiumintake = new Property(44, Double.class, "averagepotassiumintake", false, "AVERAGEPOTASSIUMINTAKE");
        public final static Property Potassiumintakeunit = new Property(45, String.class, "potassiumintakeunit", false, "POTASSIUMINTAKEUNIT");
        public final static Property Averagezincintake = new Property(46, Double.class, "averagezincintake", false, "AVERAGEZINCINTAKE");
        public final static Property Zincintakeunit = new Property(47, String.class, "zincintakeunit", false, "ZINCINTAKEUNIT");
        public final static Property Averagemagnesiumintake = new Property(48, Double.class, "averagemagnesiumintake", false, "AVERAGEMAGNESIUMINTAKE");
        public final static Property Magnesiumintakeunit = new Property(49, String.class, "magnesiumintakeunit", false, "MAGNESIUMINTAKEUNIT");
        public final static Property Averagecopperintake = new Property(50, Double.class, "averagecopperintake", false, "AVERAGECOPPERINTAKE");
        public final static Property Copperintakeunit = new Property(51, String.class, "copperintakeunit", false, "COPPERINTAKEUNIT");
        public final static Property Averagechomuimintake = new Property(52, Double.class, "averagechomuimintake", false, "AVERAGECHOMUIMINTAKE");
        public final static Property Chomuimintakeunit = new Property(53, String.class, "chomuimintakeunit", false, "CHOMUIMINTAKEUNIT");
        public final static Property Averagemangaesiumintake = new Property(54, Double.class, "averagemangaesiumintake", false, "AVERAGEMANGAESIUMINTAKE");
        public final static Property Mangaesiumintakeunit = new Property(55, String.class, "mangaesiumintakeunit", false, "MANGAESIUMINTAKEUNIT");
        public final static Property Averagemolybdenumintake = new Property(56, Double.class, "averagemolybdenumintake", false, "AVERAGEMOLYBDENUMINTAKE");
        public final static Property Molybdenumintakeunit = new Property(57, String.class, "molybdenumintakeunit", false, "MOLYBDENUMINTAKEUNIT");
        public final static Property Averageiodineintake = new Property(58, Double.class, "averageiodineintake", false, "AVERAGEIODINEINTAKE");
        public final static Property Iodineintakeunit = new Property(59, String.class, "iodineintakeunit", false, "IODINEINTAKEUNIT");
        public final static Property Averagephosphrusintake = new Property(60, Double.class, "averagephosphrusintake", false, "AVERAGEPHOSPHRUSINTAKE");
        public final static Property Phosphrusintakeunit = new Property(61, String.class, "phosphrusintakeunit", false, "PHOSPHRUSINTAKEUNIT");
        public final static Property Averageseleniumintake = new Property(62, Double.class, "averageseleniumintake", false, "AVERAGESELENIUMINTAKE");
        public final static Property Seleniumintakeunit = new Property(63, String.class, "seleniumintakeunit", false, "SELENIUMINTAKEUNIT");
        public final static Property Averagefluorineintake = new Property(64, Double.class, "averagefluorineintake", false, "AVERAGEFLUORINEINTAKE");
        public final static Property Fluorineintakeunit = new Property(65, String.class, "fluorineintakeunit", false, "FLUORINEINTAKEUNIT");
        public final static Property Averagecholesterolintake = new Property(66, Double.class, "averagecholesterolintake", false, "AVERAGECHOLESTEROLINTAKE");
        public final static Property Cholesterolintakeunit = new Property(67, String.class, "cholesterolintakeunit", false, "CHOLESTEROLINTAKEUNIT");
        public final static Property Averagesaturatedintake = new Property(68, Double.class, "averagesaturatedintake", false, "AVERAGESATURATEDINTAKE");
        public final static Property Saturatedintakeunit = new Property(69, String.class, "saturatedintakeunit", false, "SATURATEDINTAKEUNIT");
        public final static Property Averageacidregurgitationintake = new Property(70, Double.class, "averageacidregurgitationintake", false, "AVERAGEACIDREGURGITATIONINTAKE");
        public final static Property Acidregurgitationintakeunit = new Property(71, String.class, "acidregurgitationintakeunit", false, "ACIDREGURGITATIONINTAKEUNIT");
        public final static Property Averagebiotinintake = new Property(72, Double.class, "averagebiotinintake", false, "AVERAGEBIOTININTAKE");
        public final static Property Biotinintakeunit = new Property(73, String.class, "biotinintakeunit", false, "BIOTININTAKEUNIT");
        public final static Property Averagecholineintake = new Property(74, Double.class, "averagecholineintake", false, "AVERAGECHOLINEINTAKE");
        public final static Property Cholineintakeunit = new Property(75, String.class, "cholineintakeunit", false, "CHOLINEINTAKEUNIT");
        public final static Property Temp_amountstdid = new Property(76, Integer.class, "temp_amountstdid", false, "TEMP_AMOUNTSTDID");
    };


    public FoodFeatureDao(DaoConfig config) {
        super(config);
    }
    
    public FoodFeatureDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'FOOD_FEATURE' (" + //
                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "'EATINGFEATUREID' INTEGER," + // 1: eatingfeatureid
                "'EATINGHABITSDETERMINE' TEXT," + // 2: eatinghabitsdetermine
                "'EATING_HABIT_ANALYSIS' TEXT," + // 3: EatingHabitAnalysis
                "'AVERAGEENERGYINTAKE' REAL," + // 4: averageenergyintake
                "'ENERGYINTAKEUNIT' TEXT," + // 5: energyintakeunit
                "'AVERAGEMOISTUREINTAKE' REAL," + // 6: averagemoistureintake
                "'MOISTUREINTAKEUNIT' TEXT," + // 7: moistureintakeunit
                "'AVERAGEPROTEININTAKE' REAL," + // 8: averageproteinintake
                "'PROTEININTAKEUNIT' TEXT," + // 9: proteinintakeunit
                "'AVERAGEFATINTAKE' REAL," + // 10: averagefatintake
                "'FATINTAKEUNIT' TEXT," + // 11: fatintakeunit
                "'AVERAGEFIBERINTAKE' REAL," + // 12: averagefiberintake
                "'FIBERINTAKEUNIT' TEXT," + // 13: fiberintakeunit
                "'AVERAGECARBOHYDRATEINTAKE' REAL," + // 14: averagecarbohydrateintake
                "'CARBOHYDRATEINTAKEUNIT' TEXT," + // 15: carbohydrateintakeunit
                "'AVERAGEVITAMINAINTAKE' REAL," + // 16: averagevitaminaintake
                "'VITAMINAINTAKEUNIT' TEXT," + // 17: vitaminaintakeunit
                "'AVERAGEVITAMINB1INTAKE' REAL," + // 18: averagevitaminb1intake
                "'VITAMINB1INTAKEUNIT' TEXT," + // 19: vitaminb1intakeunit
                "'AVERAGEVITAMINB2INTAKE' REAL," + // 20: averagevitaminb2intake
                "'VITAMINB2INTAKEUNIT' TEXT," + // 21: vitaminb2intakeunit
                "'AVERAGEVITAMINB6INTAKE' REAL," + // 22: averagevitaminb6intake
                "'VITAMINB6INTAKEUNIT' TEXT," + // 23: vitaminb6intakeunit
                "'AVERAGEVITAMINB12INTAKE' REAL," + // 24: averagevitaminb12intake
                "'VITAMINB12INTAKEUNIT' TEXT," + // 25: vitaminb12intakeunit
                "'AVERAGEVITAMINCINTAKE' REAL," + // 26: averagevitamincintake
                "'VITAMINCINTAKEUNIT' TEXT," + // 27: vitamincintakeunit
                "'AVERAGEVITAMINDINTAKE' REAL," + // 28: averagevitamindintake
                "'VITAMINDINTAKEUNIT' TEXT," + // 29: vitamindintakeunit
                "'AVERAGEVITAMINEINTAKE' REAL," + // 30: averagevitamineintake
                "'VITAMINEINTAKEUNIT' TEXT," + // 31: vitamineintakeunit
                "'AVERAGEVITAMINKINTAKE' REAL," + // 32: averagevitaminkintake
                "'VITAMINKINTAKEUNIT' TEXT," + // 33: vitaminkintakeunit
                "'AVERAGENICOTINICACIDINTAKE' REAL," + // 34: averagenicotinicacidintake
                "'NICOTINICACIDINTAKEUNIT' TEXT," + // 35: nicotinicacidintakeunit
                "'AVERAGEFOLATEINTAKE' REAL," + // 36: averagefolateintake
                "'FOLATEINTAKEUNIT' TEXT," + // 37: folateintakeunit
                "'AVERAGESODIUMINTAKE' REAL," + // 38: averagesodiumintake
                "'SODIUMINTAKEUNIT' TEXT," + // 39: sodiumintakeunit
                "'AVERAGECALCIUMINTAKE' REAL," + // 40: averagecalciumintake
                "'CALCIUMINTAKEUNIT' TEXT," + // 41: calciumintakeunit
                "'AVERAGEIRONINTAKE' REAL," + // 42: averageironintake
                "'IRONINTAKEUNIT' TEXT," + // 43: ironintakeunit
                "'AVERAGEPOTASSIUMINTAKE' REAL," + // 44: averagepotassiumintake
                "'POTASSIUMINTAKEUNIT' TEXT," + // 45: potassiumintakeunit
                "'AVERAGEZINCINTAKE' REAL," + // 46: averagezincintake
                "'ZINCINTAKEUNIT' TEXT," + // 47: zincintakeunit
                "'AVERAGEMAGNESIUMINTAKE' REAL," + // 48: averagemagnesiumintake
                "'MAGNESIUMINTAKEUNIT' TEXT," + // 49: magnesiumintakeunit
                "'AVERAGECOPPERINTAKE' REAL," + // 50: averagecopperintake
                "'COPPERINTAKEUNIT' TEXT," + // 51: copperintakeunit
                "'AVERAGECHOMUIMINTAKE' REAL," + // 52: averagechomuimintake
                "'CHOMUIMINTAKEUNIT' TEXT," + // 53: chomuimintakeunit
                "'AVERAGEMANGAESIUMINTAKE' REAL," + // 54: averagemangaesiumintake
                "'MANGAESIUMINTAKEUNIT' TEXT," + // 55: mangaesiumintakeunit
                "'AVERAGEMOLYBDENUMINTAKE' REAL," + // 56: averagemolybdenumintake
                "'MOLYBDENUMINTAKEUNIT' TEXT," + // 57: molybdenumintakeunit
                "'AVERAGEIODINEINTAKE' REAL," + // 58: averageiodineintake
                "'IODINEINTAKEUNIT' TEXT," + // 59: iodineintakeunit
                "'AVERAGEPHOSPHRUSINTAKE' REAL," + // 60: averagephosphrusintake
                "'PHOSPHRUSINTAKEUNIT' TEXT," + // 61: phosphrusintakeunit
                "'AVERAGESELENIUMINTAKE' REAL," + // 62: averageseleniumintake
                "'SELENIUMINTAKEUNIT' TEXT," + // 63: seleniumintakeunit
                "'AVERAGEFLUORINEINTAKE' REAL," + // 64: averagefluorineintake
                "'FLUORINEINTAKEUNIT' TEXT," + // 65: fluorineintakeunit
                "'AVERAGECHOLESTEROLINTAKE' REAL," + // 66: averagecholesterolintake
                "'CHOLESTEROLINTAKEUNIT' TEXT," + // 67: cholesterolintakeunit
                "'AVERAGESATURATEDINTAKE' REAL," + // 68: averagesaturatedintake
                "'SATURATEDINTAKEUNIT' TEXT," + // 69: saturatedintakeunit
                "'AVERAGEACIDREGURGITATIONINTAKE' REAL," + // 70: averageacidregurgitationintake
                "'ACIDREGURGITATIONINTAKEUNIT' TEXT," + // 71: acidregurgitationintakeunit
                "'AVERAGEBIOTININTAKE' REAL," + // 72: averagebiotinintake
                "'BIOTININTAKEUNIT' TEXT," + // 73: biotinintakeunit
                "'AVERAGECHOLINEINTAKE' REAL," + // 74: averagecholineintake
                "'CHOLINEINTAKEUNIT' TEXT," + // 75: cholineintakeunit
                "'TEMP_AMOUNTSTDID' INTEGER);"); // 76: temp_amountstdid
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'FOOD_FEATURE'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, FoodFeature entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer eatingfeatureid = entity.getEatingfeatureid();
        if (eatingfeatureid != null) {
            stmt.bindLong(2, eatingfeatureid);
        }
 
        String eatinghabitsdetermine = entity.getEatinghabitsdetermine();
        if (eatinghabitsdetermine != null) {
            stmt.bindString(3, eatinghabitsdetermine);
        }
 
        String EatingHabitAnalysis = entity.getEatingHabitAnalysis();
        if (EatingHabitAnalysis != null) {
            stmt.bindString(4, EatingHabitAnalysis);
        }
 
        Double averageenergyintake = entity.getAverageenergyintake();
        if (averageenergyintake != null) {
            stmt.bindDouble(5, averageenergyintake);
        }
 
        String energyintakeunit = entity.getEnergyintakeunit();
        if (energyintakeunit != null) {
            stmt.bindString(6, energyintakeunit);
        }
 
        Double averagemoistureintake = entity.getAveragemoistureintake();
        if (averagemoistureintake != null) {
            stmt.bindDouble(7, averagemoistureintake);
        }
 
        String moistureintakeunit = entity.getMoistureintakeunit();
        if (moistureintakeunit != null) {
            stmt.bindString(8, moistureintakeunit);
        }
 
        Double averageproteinintake = entity.getAverageproteinintake();
        if (averageproteinintake != null) {
            stmt.bindDouble(9, averageproteinintake);
        }
 
        String proteinintakeunit = entity.getProteinintakeunit();
        if (proteinintakeunit != null) {
            stmt.bindString(10, proteinintakeunit);
        }
 
        Double averagefatintake = entity.getAveragefatintake();
        if (averagefatintake != null) {
            stmt.bindDouble(11, averagefatintake);
        }
 
        String fatintakeunit = entity.getFatintakeunit();
        if (fatintakeunit != null) {
            stmt.bindString(12, fatintakeunit);
        }
 
        Double averagefiberintake = entity.getAveragefiberintake();
        if (averagefiberintake != null) {
            stmt.bindDouble(13, averagefiberintake);
        }
 
        String fiberintakeunit = entity.getFiberintakeunit();
        if (fiberintakeunit != null) {
            stmt.bindString(14, fiberintakeunit);
        }
 
        Double averagecarbohydrateintake = entity.getAveragecarbohydrateintake();
        if (averagecarbohydrateintake != null) {
            stmt.bindDouble(15, averagecarbohydrateintake);
        }
 
        String carbohydrateintakeunit = entity.getCarbohydrateintakeunit();
        if (carbohydrateintakeunit != null) {
            stmt.bindString(16, carbohydrateintakeunit);
        }
 
        Double averagevitaminaintake = entity.getAveragevitaminaintake();
        if (averagevitaminaintake != null) {
            stmt.bindDouble(17, averagevitaminaintake);
        }
 
        String vitaminaintakeunit = entity.getVitaminaintakeunit();
        if (vitaminaintakeunit != null) {
            stmt.bindString(18, vitaminaintakeunit);
        }
 
        Double averagevitaminb1intake = entity.getAveragevitaminb1intake();
        if (averagevitaminb1intake != null) {
            stmt.bindDouble(19, averagevitaminb1intake);
        }
 
        String vitaminb1intakeunit = entity.getVitaminb1intakeunit();
        if (vitaminb1intakeunit != null) {
            stmt.bindString(20, vitaminb1intakeunit);
        }
 
        Double averagevitaminb2intake = entity.getAveragevitaminb2intake();
        if (averagevitaminb2intake != null) {
            stmt.bindDouble(21, averagevitaminb2intake);
        }
 
        String vitaminb2intakeunit = entity.getVitaminb2intakeunit();
        if (vitaminb2intakeunit != null) {
            stmt.bindString(22, vitaminb2intakeunit);
        }
 
        Double averagevitaminb6intake = entity.getAveragevitaminb6intake();
        if (averagevitaminb6intake != null) {
            stmt.bindDouble(23, averagevitaminb6intake);
        }
 
        String vitaminb6intakeunit = entity.getVitaminb6intakeunit();
        if (vitaminb6intakeunit != null) {
            stmt.bindString(24, vitaminb6intakeunit);
        }
 
        Double averagevitaminb12intake = entity.getAveragevitaminb12intake();
        if (averagevitaminb12intake != null) {
            stmt.bindDouble(25, averagevitaminb12intake);
        }
 
        String vitaminb12intakeunit = entity.getVitaminb12intakeunit();
        if (vitaminb12intakeunit != null) {
            stmt.bindString(26, vitaminb12intakeunit);
        }
 
        Double averagevitamincintake = entity.getAveragevitamincintake();
        if (averagevitamincintake != null) {
            stmt.bindDouble(27, averagevitamincintake);
        }
 
        String vitamincintakeunit = entity.getVitamincintakeunit();
        if (vitamincintakeunit != null) {
            stmt.bindString(28, vitamincintakeunit);
        }
 
        Double averagevitamindintake = entity.getAveragevitamindintake();
        if (averagevitamindintake != null) {
            stmt.bindDouble(29, averagevitamindintake);
        }
 
        String vitamindintakeunit = entity.getVitamindintakeunit();
        if (vitamindintakeunit != null) {
            stmt.bindString(30, vitamindintakeunit);
        }
 
        Double averagevitamineintake = entity.getAveragevitamineintake();
        if (averagevitamineintake != null) {
            stmt.bindDouble(31, averagevitamineintake);
        }
 
        String vitamineintakeunit = entity.getVitamineintakeunit();
        if (vitamineintakeunit != null) {
            stmt.bindString(32, vitamineintakeunit);
        }
 
        Double averagevitaminkintake = entity.getAveragevitaminkintake();
        if (averagevitaminkintake != null) {
            stmt.bindDouble(33, averagevitaminkintake);
        }
 
        String vitaminkintakeunit = entity.getVitaminkintakeunit();
        if (vitaminkintakeunit != null) {
            stmt.bindString(34, vitaminkintakeunit);
        }
 
        Double averagenicotinicacidintake = entity.getAveragenicotinicacidintake();
        if (averagenicotinicacidintake != null) {
            stmt.bindDouble(35, averagenicotinicacidintake);
        }
 
        String nicotinicacidintakeunit = entity.getNicotinicacidintakeunit();
        if (nicotinicacidintakeunit != null) {
            stmt.bindString(36, nicotinicacidintakeunit);
        }
 
        Double averagefolateintake = entity.getAveragefolateintake();
        if (averagefolateintake != null) {
            stmt.bindDouble(37, averagefolateintake);
        }
 
        String folateintakeunit = entity.getFolateintakeunit();
        if (folateintakeunit != null) {
            stmt.bindString(38, folateintakeunit);
        }
 
        Double averagesodiumintake = entity.getAveragesodiumintake();
        if (averagesodiumintake != null) {
            stmt.bindDouble(39, averagesodiumintake);
        }
 
        String sodiumintakeunit = entity.getSodiumintakeunit();
        if (sodiumintakeunit != null) {
            stmt.bindString(40, sodiumintakeunit);
        }
 
        Double averagecalciumintake = entity.getAveragecalciumintake();
        if (averagecalciumintake != null) {
            stmt.bindDouble(41, averagecalciumintake);
        }
 
        String calciumintakeunit = entity.getCalciumintakeunit();
        if (calciumintakeunit != null) {
            stmt.bindString(42, calciumintakeunit);
        }
 
        Double averageironintake = entity.getAverageironintake();
        if (averageironintake != null) {
            stmt.bindDouble(43, averageironintake);
        }
 
        String ironintakeunit = entity.getIronintakeunit();
        if (ironintakeunit != null) {
            stmt.bindString(44, ironintakeunit);
        }
 
        Double averagepotassiumintake = entity.getAveragepotassiumintake();
        if (averagepotassiumintake != null) {
            stmt.bindDouble(45, averagepotassiumintake);
        }
 
        String potassiumintakeunit = entity.getPotassiumintakeunit();
        if (potassiumintakeunit != null) {
            stmt.bindString(46, potassiumintakeunit);
        }
 
        Double averagezincintake = entity.getAveragezincintake();
        if (averagezincintake != null) {
            stmt.bindDouble(47, averagezincintake);
        }
 
        String zincintakeunit = entity.getZincintakeunit();
        if (zincintakeunit != null) {
            stmt.bindString(48, zincintakeunit);
        }
 
        Double averagemagnesiumintake = entity.getAveragemagnesiumintake();
        if (averagemagnesiumintake != null) {
            stmt.bindDouble(49, averagemagnesiumintake);
        }
 
        String magnesiumintakeunit = entity.getMagnesiumintakeunit();
        if (magnesiumintakeunit != null) {
            stmt.bindString(50, magnesiumintakeunit);
        }
 
        Double averagecopperintake = entity.getAveragecopperintake();
        if (averagecopperintake != null) {
            stmt.bindDouble(51, averagecopperintake);
        }
 
        String copperintakeunit = entity.getCopperintakeunit();
        if (copperintakeunit != null) {
            stmt.bindString(52, copperintakeunit);
        }
 
        Double averagechomuimintake = entity.getAveragechomuimintake();
        if (averagechomuimintake != null) {
            stmt.bindDouble(53, averagechomuimintake);
        }
 
        String chomuimintakeunit = entity.getChomuimintakeunit();
        if (chomuimintakeunit != null) {
            stmt.bindString(54, chomuimintakeunit);
        }
 
        Double averagemangaesiumintake = entity.getAveragemangaesiumintake();
        if (averagemangaesiumintake != null) {
            stmt.bindDouble(55, averagemangaesiumintake);
        }
 
        String mangaesiumintakeunit = entity.getMangaesiumintakeunit();
        if (mangaesiumintakeunit != null) {
            stmt.bindString(56, mangaesiumintakeunit);
        }
 
        Double averagemolybdenumintake = entity.getAveragemolybdenumintake();
        if (averagemolybdenumintake != null) {
            stmt.bindDouble(57, averagemolybdenumintake);
        }
 
        String molybdenumintakeunit = entity.getMolybdenumintakeunit();
        if (molybdenumintakeunit != null) {
            stmt.bindString(58, molybdenumintakeunit);
        }
 
        Double averageiodineintake = entity.getAverageiodineintake();
        if (averageiodineintake != null) {
            stmt.bindDouble(59, averageiodineintake);
        }
 
        String iodineintakeunit = entity.getIodineintakeunit();
        if (iodineintakeunit != null) {
            stmt.bindString(60, iodineintakeunit);
        }
 
        Double averagephosphrusintake = entity.getAveragephosphrusintake();
        if (averagephosphrusintake != null) {
            stmt.bindDouble(61, averagephosphrusintake);
        }
 
        String phosphrusintakeunit = entity.getPhosphrusintakeunit();
        if (phosphrusintakeunit != null) {
            stmt.bindString(62, phosphrusintakeunit);
        }
 
        Double averageseleniumintake = entity.getAverageseleniumintake();
        if (averageseleniumintake != null) {
            stmt.bindDouble(63, averageseleniumintake);
        }
 
        String seleniumintakeunit = entity.getSeleniumintakeunit();
        if (seleniumintakeunit != null) {
            stmt.bindString(64, seleniumintakeunit);
        }
 
        Double averagefluorineintake = entity.getAveragefluorineintake();
        if (averagefluorineintake != null) {
            stmt.bindDouble(65, averagefluorineintake);
        }
 
        String fluorineintakeunit = entity.getFluorineintakeunit();
        if (fluorineintakeunit != null) {
            stmt.bindString(66, fluorineintakeunit);
        }
 
        Double averagecholesterolintake = entity.getAveragecholesterolintake();
        if (averagecholesterolintake != null) {
            stmt.bindDouble(67, averagecholesterolintake);
        }
 
        String cholesterolintakeunit = entity.getCholesterolintakeunit();
        if (cholesterolintakeunit != null) {
            stmt.bindString(68, cholesterolintakeunit);
        }
 
        Double averagesaturatedintake = entity.getAveragesaturatedintake();
        if (averagesaturatedintake != null) {
            stmt.bindDouble(69, averagesaturatedintake);
        }
 
        String saturatedintakeunit = entity.getSaturatedintakeunit();
        if (saturatedintakeunit != null) {
            stmt.bindString(70, saturatedintakeunit);
        }
 
        Double averageacidregurgitationintake = entity.getAverageacidregurgitationintake();
        if (averageacidregurgitationintake != null) {
            stmt.bindDouble(71, averageacidregurgitationintake);
        }
 
        String acidregurgitationintakeunit = entity.getAcidregurgitationintakeunit();
        if (acidregurgitationintakeunit != null) {
            stmt.bindString(72, acidregurgitationintakeunit);
        }
 
        Double averagebiotinintake = entity.getAveragebiotinintake();
        if (averagebiotinintake != null) {
            stmt.bindDouble(73, averagebiotinintake);
        }
 
        String biotinintakeunit = entity.getBiotinintakeunit();
        if (biotinintakeunit != null) {
            stmt.bindString(74, biotinintakeunit);
        }
 
        Double averagecholineintake = entity.getAveragecholineintake();
        if (averagecholineintake != null) {
            stmt.bindDouble(75, averagecholineintake);
        }
 
        String cholineintakeunit = entity.getCholineintakeunit();
        if (cholineintakeunit != null) {
            stmt.bindString(76, cholineintakeunit);
        }
 
        Integer temp_amountstdid = entity.getTemp_amountstdid();
        if (temp_amountstdid != null) {
            stmt.bindLong(77, temp_amountstdid);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public FoodFeature readEntity(Cursor cursor, int offset) {
        FoodFeature entity = new FoodFeature( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // eatingfeatureid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // eatinghabitsdetermine
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // EatingHabitAnalysis
            cursor.isNull(offset + 4) ? null : cursor.getDouble(offset + 4), // averageenergyintake
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // energyintakeunit
            cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6), // averagemoistureintake
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // moistureintakeunit
            cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8), // averageproteinintake
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // proteinintakeunit
            cursor.isNull(offset + 10) ? null : cursor.getDouble(offset + 10), // averagefatintake
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // fatintakeunit
            cursor.isNull(offset + 12) ? null : cursor.getDouble(offset + 12), // averagefiberintake
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // fiberintakeunit
            cursor.isNull(offset + 14) ? null : cursor.getDouble(offset + 14), // averagecarbohydrateintake
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // carbohydrateintakeunit
            cursor.isNull(offset + 16) ? null : cursor.getDouble(offset + 16), // averagevitaminaintake
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // vitaminaintakeunit
            cursor.isNull(offset + 18) ? null : cursor.getDouble(offset + 18), // averagevitaminb1intake
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // vitaminb1intakeunit
            cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20), // averagevitaminb2intake
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // vitaminb2intakeunit
            cursor.isNull(offset + 22) ? null : cursor.getDouble(offset + 22), // averagevitaminb6intake
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // vitaminb6intakeunit
            cursor.isNull(offset + 24) ? null : cursor.getDouble(offset + 24), // averagevitaminb12intake
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // vitaminb12intakeunit
            cursor.isNull(offset + 26) ? null : cursor.getDouble(offset + 26), // averagevitamincintake
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // vitamincintakeunit
            cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28), // averagevitamindintake
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // vitamindintakeunit
            cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30), // averagevitamineintake
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // vitamineintakeunit
            cursor.isNull(offset + 32) ? null : cursor.getDouble(offset + 32), // averagevitaminkintake
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // vitaminkintakeunit
            cursor.isNull(offset + 34) ? null : cursor.getDouble(offset + 34), // averagenicotinicacidintake
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // nicotinicacidintakeunit
            cursor.isNull(offset + 36) ? null : cursor.getDouble(offset + 36), // averagefolateintake
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // folateintakeunit
            cursor.isNull(offset + 38) ? null : cursor.getDouble(offset + 38), // averagesodiumintake
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // sodiumintakeunit
            cursor.isNull(offset + 40) ? null : cursor.getDouble(offset + 40), // averagecalciumintake
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // calciumintakeunit
            cursor.isNull(offset + 42) ? null : cursor.getDouble(offset + 42), // averageironintake
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // ironintakeunit
            cursor.isNull(offset + 44) ? null : cursor.getDouble(offset + 44), // averagepotassiumintake
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // potassiumintakeunit
            cursor.isNull(offset + 46) ? null : cursor.getDouble(offset + 46), // averagezincintake
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // zincintakeunit
            cursor.isNull(offset + 48) ? null : cursor.getDouble(offset + 48), // averagemagnesiumintake
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // magnesiumintakeunit
            cursor.isNull(offset + 50) ? null : cursor.getDouble(offset + 50), // averagecopperintake
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // copperintakeunit
            cursor.isNull(offset + 52) ? null : cursor.getDouble(offset + 52), // averagechomuimintake
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // chomuimintakeunit
            cursor.isNull(offset + 54) ? null : cursor.getDouble(offset + 54), // averagemangaesiumintake
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // mangaesiumintakeunit
            cursor.isNull(offset + 56) ? null : cursor.getDouble(offset + 56), // averagemolybdenumintake
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // molybdenumintakeunit
            cursor.isNull(offset + 58) ? null : cursor.getDouble(offset + 58), // averageiodineintake
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // iodineintakeunit
            cursor.isNull(offset + 60) ? null : cursor.getDouble(offset + 60), // averagephosphrusintake
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // phosphrusintakeunit
            cursor.isNull(offset + 62) ? null : cursor.getDouble(offset + 62), // averageseleniumintake
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // seleniumintakeunit
            cursor.isNull(offset + 64) ? null : cursor.getDouble(offset + 64), // averagefluorineintake
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // fluorineintakeunit
            cursor.isNull(offset + 66) ? null : cursor.getDouble(offset + 66), // averagecholesterolintake
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // cholesterolintakeunit
            cursor.isNull(offset + 68) ? null : cursor.getDouble(offset + 68), // averagesaturatedintake
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // saturatedintakeunit
            cursor.isNull(offset + 70) ? null : cursor.getDouble(offset + 70), // averageacidregurgitationintake
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // acidregurgitationintakeunit
            cursor.isNull(offset + 72) ? null : cursor.getDouble(offset + 72), // averagebiotinintake
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // biotinintakeunit
            cursor.isNull(offset + 74) ? null : cursor.getDouble(offset + 74), // averagecholineintake
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // cholineintakeunit
            cursor.isNull(offset + 76) ? null : cursor.getInt(offset + 76) // temp_amountstdid
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, FoodFeature entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setEatingfeatureid(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setEatinghabitsdetermine(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setEatingHabitAnalysis(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAverageenergyintake(cursor.isNull(offset + 4) ? null : cursor.getDouble(offset + 4));
        entity.setEnergyintakeunit(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAveragemoistureintake(cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6));
        entity.setMoistureintakeunit(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setAverageproteinintake(cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8));
        entity.setProteinintakeunit(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setAveragefatintake(cursor.isNull(offset + 10) ? null : cursor.getDouble(offset + 10));
        entity.setFatintakeunit(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setAveragefiberintake(cursor.isNull(offset + 12) ? null : cursor.getDouble(offset + 12));
        entity.setFiberintakeunit(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setAveragecarbohydrateintake(cursor.isNull(offset + 14) ? null : cursor.getDouble(offset + 14));
        entity.setCarbohydrateintakeunit(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setAveragevitaminaintake(cursor.isNull(offset + 16) ? null : cursor.getDouble(offset + 16));
        entity.setVitaminaintakeunit(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setAveragevitaminb1intake(cursor.isNull(offset + 18) ? null : cursor.getDouble(offset + 18));
        entity.setVitaminb1intakeunit(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setAveragevitaminb2intake(cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20));
        entity.setVitaminb2intakeunit(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setAveragevitaminb6intake(cursor.isNull(offset + 22) ? null : cursor.getDouble(offset + 22));
        entity.setVitaminb6intakeunit(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setAveragevitaminb12intake(cursor.isNull(offset + 24) ? null : cursor.getDouble(offset + 24));
        entity.setVitaminb12intakeunit(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setAveragevitamincintake(cursor.isNull(offset + 26) ? null : cursor.getDouble(offset + 26));
        entity.setVitamincintakeunit(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setAveragevitamindintake(cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28));
        entity.setVitamindintakeunit(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setAveragevitamineintake(cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30));
        entity.setVitamineintakeunit(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setAveragevitaminkintake(cursor.isNull(offset + 32) ? null : cursor.getDouble(offset + 32));
        entity.setVitaminkintakeunit(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setAveragenicotinicacidintake(cursor.isNull(offset + 34) ? null : cursor.getDouble(offset + 34));
        entity.setNicotinicacidintakeunit(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setAveragefolateintake(cursor.isNull(offset + 36) ? null : cursor.getDouble(offset + 36));
        entity.setFolateintakeunit(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setAveragesodiumintake(cursor.isNull(offset + 38) ? null : cursor.getDouble(offset + 38));
        entity.setSodiumintakeunit(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setAveragecalciumintake(cursor.isNull(offset + 40) ? null : cursor.getDouble(offset + 40));
        entity.setCalciumintakeunit(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setAverageironintake(cursor.isNull(offset + 42) ? null : cursor.getDouble(offset + 42));
        entity.setIronintakeunit(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setAveragepotassiumintake(cursor.isNull(offset + 44) ? null : cursor.getDouble(offset + 44));
        entity.setPotassiumintakeunit(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setAveragezincintake(cursor.isNull(offset + 46) ? null : cursor.getDouble(offset + 46));
        entity.setZincintakeunit(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setAveragemagnesiumintake(cursor.isNull(offset + 48) ? null : cursor.getDouble(offset + 48));
        entity.setMagnesiumintakeunit(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setAveragecopperintake(cursor.isNull(offset + 50) ? null : cursor.getDouble(offset + 50));
        entity.setCopperintakeunit(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setAveragechomuimintake(cursor.isNull(offset + 52) ? null : cursor.getDouble(offset + 52));
        entity.setChomuimintakeunit(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setAveragemangaesiumintake(cursor.isNull(offset + 54) ? null : cursor.getDouble(offset + 54));
        entity.setMangaesiumintakeunit(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setAveragemolybdenumintake(cursor.isNull(offset + 56) ? null : cursor.getDouble(offset + 56));
        entity.setMolybdenumintakeunit(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setAverageiodineintake(cursor.isNull(offset + 58) ? null : cursor.getDouble(offset + 58));
        entity.setIodineintakeunit(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setAveragephosphrusintake(cursor.isNull(offset + 60) ? null : cursor.getDouble(offset + 60));
        entity.setPhosphrusintakeunit(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setAverageseleniumintake(cursor.isNull(offset + 62) ? null : cursor.getDouble(offset + 62));
        entity.setSeleniumintakeunit(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setAveragefluorineintake(cursor.isNull(offset + 64) ? null : cursor.getDouble(offset + 64));
        entity.setFluorineintakeunit(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setAveragecholesterolintake(cursor.isNull(offset + 66) ? null : cursor.getDouble(offset + 66));
        entity.setCholesterolintakeunit(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setAveragesaturatedintake(cursor.isNull(offset + 68) ? null : cursor.getDouble(offset + 68));
        entity.setSaturatedintakeunit(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setAverageacidregurgitationintake(cursor.isNull(offset + 70) ? null : cursor.getDouble(offset + 70));
        entity.setAcidregurgitationintakeunit(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setAveragebiotinintake(cursor.isNull(offset + 72) ? null : cursor.getDouble(offset + 72));
        entity.setBiotinintakeunit(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setAveragecholineintake(cursor.isNull(offset + 74) ? null : cursor.getDouble(offset + 74));
        entity.setCholineintakeunit(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setTemp_amountstdid(cursor.isNull(offset + 76) ? null : cursor.getInt(offset + 76));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(FoodFeature entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(FoodFeature entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
