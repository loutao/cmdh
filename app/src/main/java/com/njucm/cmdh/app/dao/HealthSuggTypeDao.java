package com.njucm.cmdh.app.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.njucm.cmdh.app.domain.HealthSuggType;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table HEALTH_SUGG_TYPE.
*/
public class HealthSuggTypeDao extends AbstractDao<HealthSuggType, Long> {

    public static final String TABLENAME = "HEALTH_SUGG_TYPE";

    /**
     * Properties of entity HealthSuggType.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Healthsuggtypeid = new Property(1, Integer.class, "healthsuggtypeid", false, "HEALTHSUGGTYPEID");
        public final static Property Healthsuggtypename = new Property(2, String.class, "healthsuggtypename", false, "HEALTHSUGGTYPENAME");
        public final static Property Healthsuggtypecode = new Property(3, Integer.class, "healthsuggtypecode", false, "HEALTHSUGGTYPECODE");
        public final static Property Suggclassifyexpla = new Property(4, String.class, "suggclassifyexpla", false, "SUGGCLASSIFYEXPLA");
        public final static Property Healthsuggtyperemarks = new Property(5, String.class, "healthsuggtyperemarks", false, "HEALTHSUGGTYPEREMARKS");
    };


    public HealthSuggTypeDao(DaoConfig config) {
        super(config);
    }
    
    public HealthSuggTypeDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'HEALTH_SUGG_TYPE' (" + //
                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "'HEALTHSUGGTYPEID' INTEGER," + // 1: healthsuggtypeid
                "'HEALTHSUGGTYPENAME' TEXT," + // 2: healthsuggtypename
                "'HEALTHSUGGTYPECODE' INTEGER," + // 3: healthsuggtypecode
                "'SUGGCLASSIFYEXPLA' TEXT," + // 4: suggclassifyexpla
                "'HEALTHSUGGTYPEREMARKS' TEXT);"); // 5: healthsuggtyperemarks
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'HEALTH_SUGG_TYPE'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, HealthSuggType entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer healthsuggtypeid = entity.getHealthsuggtypeid();
        if (healthsuggtypeid != null) {
            stmt.bindLong(2, healthsuggtypeid);
        }
 
        String healthsuggtypename = entity.getHealthsuggtypename();
        if (healthsuggtypename != null) {
            stmt.bindString(3, healthsuggtypename);
        }
 
        Integer healthsuggtypecode = entity.getHealthsuggtypecode();
        if (healthsuggtypecode != null) {
            stmt.bindLong(4, healthsuggtypecode);
        }
 
        String suggclassifyexpla = entity.getSuggclassifyexpla();
        if (suggclassifyexpla != null) {
            stmt.bindString(5, suggclassifyexpla);
        }
 
        String healthsuggtyperemarks = entity.getHealthsuggtyperemarks();
        if (healthsuggtyperemarks != null) {
            stmt.bindString(6, healthsuggtyperemarks);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public HealthSuggType readEntity(Cursor cursor, int offset) {
        HealthSuggType entity = new HealthSuggType( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // healthsuggtypeid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // healthsuggtypename
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // healthsuggtypecode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // suggclassifyexpla
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // healthsuggtyperemarks
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, HealthSuggType entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setHealthsuggtypeid(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setHealthsuggtypename(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setHealthsuggtypecode(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setSuggclassifyexpla(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setHealthsuggtyperemarks(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(HealthSuggType entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(HealthSuggType entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
