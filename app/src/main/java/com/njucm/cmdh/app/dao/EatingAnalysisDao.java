package com.njucm.cmdh.app.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.njucm.cmdh.app.domain.EatingAnalysis;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table EATING_ANALYSIS.
*/
public class EatingAnalysisDao extends AbstractDao<EatingAnalysis, Long> {

    public static final String TABLENAME = "EATING_ANALYSIS";

    /**
     * Properties of entity EatingAnalysis.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Energyintake = new Property(1, Double.class, "energyintake", false, "ENERGYINTAKE");
        public final static Property Energyunit = new Property(2, String.class, "energyunit", false, "ENERGYUNIT");
        public final static Property Moistureintake = new Property(3, Double.class, "moistureintake", false, "MOISTUREINTAKE");
        public final static Property Moistureunit = new Property(4, String.class, "moistureunit", false, "MOISTUREUNIT");
        public final static Property Proteinintake = new Property(5, Double.class, "proteinintake", false, "PROTEININTAKE");
        public final static Property Proteinunit = new Property(6, String.class, "proteinunit", false, "PROTEINUNIT");
        public final static Property Fatintake = new Property(7, Double.class, "fatintake", false, "FATINTAKE");
        public final static Property Fatunit = new Property(8, String.class, "fatunit", false, "FATUNIT");
        public final static Property Fiberintake = new Property(9, Double.class, "fiberintake", false, "FIBERINTAKE");
        public final static Property Fiberunit = new Property(10, String.class, "fiberunit", false, "FIBERUNIT");
        public final static Property Carbohydrateintake = new Property(11, Double.class, "carbohydrateintake", false, "CARBOHYDRATEINTAKE");
        public final static Property Carbohydrateunit = new Property(12, String.class, "carbohydrateunit", false, "CARBOHYDRATEUNIT");
        public final static Property Vitaminaintake = new Property(13, Double.class, "vitaminaintake", false, "VITAMINAINTAKE");
        public final static Property Vitaminaunit = new Property(14, String.class, "vitaminaunit", false, "VITAMINAUNIT");
        public final static Property Vitaminb1intake = new Property(15, Double.class, "vitaminb1intake", false, "VITAMINB1INTAKE");
        public final static Property Vitaminb1unit = new Property(16, String.class, "vitaminb1unit", false, "VITAMINB1UNIT");
        public final static Property Vitaminb2intake = new Property(17, Double.class, "vitaminb2intake", false, "VITAMINB2INTAKE");
        public final static Property Vitaminb2unit = new Property(18, String.class, "vitaminb2unit", false, "VITAMINB2UNIT");
        public final static Property Vitaminb6intake = new Property(19, Double.class, "vitaminb6intake", false, "VITAMINB6INTAKE");
        public final static Property Vitaminb6unit = new Property(20, String.class, "vitaminb6unit", false, "VITAMINB6UNIT");
        public final static Property Vitaminb12intake = new Property(21, Double.class, "vitaminb12intake", false, "VITAMINB12INTAKE");
        public final static Property Vitaminb12unit = new Property(22, String.class, "vitaminb12unit", false, "VITAMINB12UNIT");
        public final static Property Vitamincintake = new Property(23, Double.class, "vitamincintake", false, "VITAMINCINTAKE");
        public final static Property Vitamincunit = new Property(24, String.class, "vitamincunit", false, "VITAMINCUNIT");
        public final static Property Vitamindintake = new Property(25, Double.class, "vitamindintake", false, "VITAMINDINTAKE");
        public final static Property Vitamindunit = new Property(26, String.class, "vitamindunit", false, "VITAMINDUNIT");
        public final static Property Vitamineintake = new Property(27, Double.class, "vitamineintake", false, "VITAMINEINTAKE");
        public final static Property Vitaminunit = new Property(28, String.class, "vitaminunit", false, "VITAMINUNIT");
        public final static Property Vitaminkintake = new Property(29, Double.class, "vitaminkintake", false, "VITAMINKINTAKE");
        public final static Property Vitaminkunit = new Property(30, String.class, "vitaminkunit", false, "VITAMINKUNIT");
        public final static Property Nicotinicacidintake = new Property(31, Double.class, "nicotinicacidintake", false, "NICOTINICACIDINTAKE");
        public final static Property Nicotinicunit = new Property(32, String.class, "nicotinicunit", false, "NICOTINICUNIT");
        public final static Property Folateintake = new Property(33, Double.class, "folateintake", false, "FOLATEINTAKE");
        public final static Property Folateunit = new Property(34, String.class, "folateunit", false, "FOLATEUNIT");
        public final static Property Sodiumintake = new Property(35, Double.class, "sodiumintake", false, "SODIUMINTAKE");
        public final static Property Sodiumunit = new Property(36, String.class, "sodiumunit", false, "SODIUMUNIT");
        public final static Property Calciumintake = new Property(37, Double.class, "calciumintake", false, "CALCIUMINTAKE");
        public final static Property Calciumunit = new Property(38, String.class, "calciumunit", false, "CALCIUMUNIT");
        public final static Property Ironintake = new Property(39, Double.class, "ironintake", false, "IRONINTAKE");
        public final static Property Ironunit = new Property(40, String.class, "ironunit", false, "IRONUNIT");
        public final static Property Potassiumintake = new Property(41, Double.class, "potassiumintake", false, "POTASSIUMINTAKE");
        public final static Property Potassiumunit = new Property(42, String.class, "potassiumunit", false, "POTASSIUMUNIT");
        public final static Property Zincintake = new Property(43, Double.class, "zincintake", false, "ZINCINTAKE");
        public final static Property Zincunit = new Property(44, String.class, "zincunit", false, "ZINCUNIT");
        public final static Property Magnesiumintake = new Property(45, Double.class, "magnesiumintake", false, "MAGNESIUMINTAKE");
        public final static Property Magnesiumunit = new Property(46, String.class, "magnesiumunit", false, "MAGNESIUMUNIT");
        public final static Property Copperintake = new Property(47, Double.class, "copperintake", false, "COPPERINTAKE");
        public final static Property Copperunit = new Property(48, String.class, "copperunit", false, "COPPERUNIT");
        public final static Property Chomuimintake = new Property(49, Double.class, "chomuimintake", false, "CHOMUIMINTAKE");
        public final static Property Chomuimunit = new Property(50, String.class, "chomuimunit", false, "CHOMUIMUNIT");
        public final static Property Mangaesiumintake = new Property(51, Double.class, "mangaesiumintake", false, "MANGAESIUMINTAKE");
        public final static Property Mangaesiumunit = new Property(52, String.class, "mangaesiumunit", false, "MANGAESIUMUNIT");
        public final static Property Molybdenumintake = new Property(53, Double.class, "molybdenumintake", false, "MOLYBDENUMINTAKE");
        public final static Property Molybdenumunit = new Property(54, String.class, "molybdenumunit", false, "MOLYBDENUMUNIT");
        public final static Property Iodineintake = new Property(55, Double.class, "iodineintake", false, "IODINEINTAKE");
        public final static Property Iodineunit = new Property(56, String.class, "iodineunit", false, "IODINEUNIT");
        public final static Property Phosphrusintake = new Property(57, Double.class, "phosphrusintake", false, "PHOSPHRUSINTAKE");
        public final static Property Phosphrusunit = new Property(58, String.class, "phosphrusunit", false, "PHOSPHRUSUNIT");
        public final static Property Seleniumintake = new Property(59, Double.class, "seleniumintake", false, "SELENIUMINTAKE");
        public final static Property Seleniumunit = new Property(60, String.class, "seleniumunit", false, "SELENIUMUNIT");
        public final static Property Fluorineintake = new Property(61, Double.class, "fluorineintake", false, "FLUORINEINTAKE");
        public final static Property Fluorineunit = new Property(62, String.class, "fluorineunit", false, "FLUORINEUNIT");
        public final static Property Cholesterolintake = new Property(63, Double.class, "cholesterolintake", false, "CHOLESTEROLINTAKE");
        public final static Property Cholesterolunit = new Property(64, String.class, "cholesterolunit", false, "CHOLESTEROLUNIT");
        public final static Property Saturatedintake = new Property(65, Double.class, "saturatedintake", false, "SATURATEDINTAKE");
        public final static Property Saturatedunit = new Property(66, String.class, "saturatedunit", false, "SATURATEDUNIT");
        public final static Property Acidregurgitationintake = new Property(67, Double.class, "acidregurgitationintake", false, "ACIDREGURGITATIONINTAKE");
        public final static Property Acidregurgitationunit = new Property(68, String.class, "acidregurgitationunit", false, "ACIDREGURGITATIONUNIT");
        public final static Property Biotinintake = new Property(69, Double.class, "biotinintake", false, "BIOTININTAKE");
        public final static Property Biotinunit = new Property(70, String.class, "biotinunit", false, "BIOTINUNIT");
        public final static Property Cholineintake = new Property(71, Double.class, "cholineintake", false, "CHOLINEINTAKE");
        public final static Property Cholineunit = new Property(72, String.class, "cholineunit", false, "CHOLINEUNIT");
        public final static Property Temp_eatingrecordid = new Property(73, Integer.class, "temp_eatingrecordid", false, "TEMP_EATINGRECORDID");
    };


    public EatingAnalysisDao(DaoConfig config) {
        super(config);
    }
    
    public EatingAnalysisDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'EATING_ANALYSIS' (" + //
                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "'ENERGYINTAKE' REAL," + // 1: energyintake
                "'ENERGYUNIT' TEXT," + // 2: energyunit
                "'MOISTUREINTAKE' REAL," + // 3: moistureintake
                "'MOISTUREUNIT' TEXT," + // 4: moistureunit
                "'PROTEININTAKE' REAL," + // 5: proteinintake
                "'PROTEINUNIT' TEXT," + // 6: proteinunit
                "'FATINTAKE' REAL," + // 7: fatintake
                "'FATUNIT' TEXT," + // 8: fatunit
                "'FIBERINTAKE' REAL," + // 9: fiberintake
                "'FIBERUNIT' TEXT," + // 10: fiberunit
                "'CARBOHYDRATEINTAKE' REAL," + // 11: carbohydrateintake
                "'CARBOHYDRATEUNIT' TEXT," + // 12: carbohydrateunit
                "'VITAMINAINTAKE' REAL," + // 13: vitaminaintake
                "'VITAMINAUNIT' TEXT," + // 14: vitaminaunit
                "'VITAMINB1INTAKE' REAL," + // 15: vitaminb1intake
                "'VITAMINB1UNIT' TEXT," + // 16: vitaminb1unit
                "'VITAMINB2INTAKE' REAL," + // 17: vitaminb2intake
                "'VITAMINB2UNIT' TEXT," + // 18: vitaminb2unit
                "'VITAMINB6INTAKE' REAL," + // 19: vitaminb6intake
                "'VITAMINB6UNIT' TEXT," + // 20: vitaminb6unit
                "'VITAMINB12INTAKE' REAL," + // 21: vitaminb12intake
                "'VITAMINB12UNIT' TEXT," + // 22: vitaminb12unit
                "'VITAMINCINTAKE' REAL," + // 23: vitamincintake
                "'VITAMINCUNIT' TEXT," + // 24: vitamincunit
                "'VITAMINDINTAKE' REAL," + // 25: vitamindintake
                "'VITAMINDUNIT' TEXT," + // 26: vitamindunit
                "'VITAMINEINTAKE' REAL," + // 27: vitamineintake
                "'VITAMINUNIT' TEXT," + // 28: vitaminunit
                "'VITAMINKINTAKE' REAL," + // 29: vitaminkintake
                "'VITAMINKUNIT' TEXT," + // 30: vitaminkunit
                "'NICOTINICACIDINTAKE' REAL," + // 31: nicotinicacidintake
                "'NICOTINICUNIT' TEXT," + // 32: nicotinicunit
                "'FOLATEINTAKE' REAL," + // 33: folateintake
                "'FOLATEUNIT' TEXT," + // 34: folateunit
                "'SODIUMINTAKE' REAL," + // 35: sodiumintake
                "'SODIUMUNIT' TEXT," + // 36: sodiumunit
                "'CALCIUMINTAKE' REAL," + // 37: calciumintake
                "'CALCIUMUNIT' TEXT," + // 38: calciumunit
                "'IRONINTAKE' REAL," + // 39: ironintake
                "'IRONUNIT' TEXT," + // 40: ironunit
                "'POTASSIUMINTAKE' REAL," + // 41: potassiumintake
                "'POTASSIUMUNIT' TEXT," + // 42: potassiumunit
                "'ZINCINTAKE' REAL," + // 43: zincintake
                "'ZINCUNIT' TEXT," + // 44: zincunit
                "'MAGNESIUMINTAKE' REAL," + // 45: magnesiumintake
                "'MAGNESIUMUNIT' TEXT," + // 46: magnesiumunit
                "'COPPERINTAKE' REAL," + // 47: copperintake
                "'COPPERUNIT' TEXT," + // 48: copperunit
                "'CHOMUIMINTAKE' REAL," + // 49: chomuimintake
                "'CHOMUIMUNIT' TEXT," + // 50: chomuimunit
                "'MANGAESIUMINTAKE' REAL," + // 51: mangaesiumintake
                "'MANGAESIUMUNIT' TEXT," + // 52: mangaesiumunit
                "'MOLYBDENUMINTAKE' REAL," + // 53: molybdenumintake
                "'MOLYBDENUMUNIT' TEXT," + // 54: molybdenumunit
                "'IODINEINTAKE' REAL," + // 55: iodineintake
                "'IODINEUNIT' TEXT," + // 56: iodineunit
                "'PHOSPHRUSINTAKE' REAL," + // 57: phosphrusintake
                "'PHOSPHRUSUNIT' TEXT," + // 58: phosphrusunit
                "'SELENIUMINTAKE' REAL," + // 59: seleniumintake
                "'SELENIUMUNIT' TEXT," + // 60: seleniumunit
                "'FLUORINEINTAKE' REAL," + // 61: fluorineintake
                "'FLUORINEUNIT' TEXT," + // 62: fluorineunit
                "'CHOLESTEROLINTAKE' REAL," + // 63: cholesterolintake
                "'CHOLESTEROLUNIT' TEXT," + // 64: cholesterolunit
                "'SATURATEDINTAKE' REAL," + // 65: saturatedintake
                "'SATURATEDUNIT' TEXT," + // 66: saturatedunit
                "'ACIDREGURGITATIONINTAKE' REAL," + // 67: acidregurgitationintake
                "'ACIDREGURGITATIONUNIT' TEXT," + // 68: acidregurgitationunit
                "'BIOTININTAKE' REAL," + // 69: biotinintake
                "'BIOTINUNIT' TEXT," + // 70: biotinunit
                "'CHOLINEINTAKE' REAL," + // 71: cholineintake
                "'CHOLINEUNIT' TEXT," + // 72: cholineunit
                "'TEMP_EATINGRECORDID' INTEGER);"); // 73: temp_eatingrecordid
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'EATING_ANALYSIS'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, EatingAnalysis entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Double energyintake = entity.getEnergyintake();
        if (energyintake != null) {
            stmt.bindDouble(2, energyintake);
        }
 
        String energyunit = entity.getEnergyunit();
        if (energyunit != null) {
            stmt.bindString(3, energyunit);
        }
 
        Double moistureintake = entity.getMoistureintake();
        if (moistureintake != null) {
            stmt.bindDouble(4, moistureintake);
        }
 
        String moistureunit = entity.getMoistureunit();
        if (moistureunit != null) {
            stmt.bindString(5, moistureunit);
        }
 
        Double proteinintake = entity.getProteinintake();
        if (proteinintake != null) {
            stmt.bindDouble(6, proteinintake);
        }
 
        String proteinunit = entity.getProteinunit();
        if (proteinunit != null) {
            stmt.bindString(7, proteinunit);
        }
 
        Double fatintake = entity.getFatintake();
        if (fatintake != null) {
            stmt.bindDouble(8, fatintake);
        }
 
        String fatunit = entity.getFatunit();
        if (fatunit != null) {
            stmt.bindString(9, fatunit);
        }
 
        Double fiberintake = entity.getFiberintake();
        if (fiberintake != null) {
            stmt.bindDouble(10, fiberintake);
        }
 
        String fiberunit = entity.getFiberunit();
        if (fiberunit != null) {
            stmt.bindString(11, fiberunit);
        }
 
        Double carbohydrateintake = entity.getCarbohydrateintake();
        if (carbohydrateintake != null) {
            stmt.bindDouble(12, carbohydrateintake);
        }
 
        String carbohydrateunit = entity.getCarbohydrateunit();
        if (carbohydrateunit != null) {
            stmt.bindString(13, carbohydrateunit);
        }
 
        Double vitaminaintake = entity.getVitaminaintake();
        if (vitaminaintake != null) {
            stmt.bindDouble(14, vitaminaintake);
        }
 
        String vitaminaunit = entity.getVitaminaunit();
        if (vitaminaunit != null) {
            stmt.bindString(15, vitaminaunit);
        }
 
        Double vitaminb1intake = entity.getVitaminb1intake();
        if (vitaminb1intake != null) {
            stmt.bindDouble(16, vitaminb1intake);
        }
 
        String vitaminb1unit = entity.getVitaminb1unit();
        if (vitaminb1unit != null) {
            stmt.bindString(17, vitaminb1unit);
        }
 
        Double vitaminb2intake = entity.getVitaminb2intake();
        if (vitaminb2intake != null) {
            stmt.bindDouble(18, vitaminb2intake);
        }
 
        String vitaminb2unit = entity.getVitaminb2unit();
        if (vitaminb2unit != null) {
            stmt.bindString(19, vitaminb2unit);
        }
 
        Double vitaminb6intake = entity.getVitaminb6intake();
        if (vitaminb6intake != null) {
            stmt.bindDouble(20, vitaminb6intake);
        }
 
        String vitaminb6unit = entity.getVitaminb6unit();
        if (vitaminb6unit != null) {
            stmt.bindString(21, vitaminb6unit);
        }
 
        Double vitaminb12intake = entity.getVitaminb12intake();
        if (vitaminb12intake != null) {
            stmt.bindDouble(22, vitaminb12intake);
        }
 
        String vitaminb12unit = entity.getVitaminb12unit();
        if (vitaminb12unit != null) {
            stmt.bindString(23, vitaminb12unit);
        }
 
        Double vitamincintake = entity.getVitamincintake();
        if (vitamincintake != null) {
            stmt.bindDouble(24, vitamincintake);
        }
 
        String vitamincunit = entity.getVitamincunit();
        if (vitamincunit != null) {
            stmt.bindString(25, vitamincunit);
        }
 
        Double vitamindintake = entity.getVitamindintake();
        if (vitamindintake != null) {
            stmt.bindDouble(26, vitamindintake);
        }
 
        String vitamindunit = entity.getVitamindunit();
        if (vitamindunit != null) {
            stmt.bindString(27, vitamindunit);
        }
 
        Double vitamineintake = entity.getVitamineintake();
        if (vitamineintake != null) {
            stmt.bindDouble(28, vitamineintake);
        }
 
        String vitaminunit = entity.getVitaminunit();
        if (vitaminunit != null) {
            stmt.bindString(29, vitaminunit);
        }
 
        Double vitaminkintake = entity.getVitaminkintake();
        if (vitaminkintake != null) {
            stmt.bindDouble(30, vitaminkintake);
        }
 
        String vitaminkunit = entity.getVitaminkunit();
        if (vitaminkunit != null) {
            stmt.bindString(31, vitaminkunit);
        }
 
        Double nicotinicacidintake = entity.getNicotinicacidintake();
        if (nicotinicacidintake != null) {
            stmt.bindDouble(32, nicotinicacidintake);
        }
 
        String nicotinicunit = entity.getNicotinicunit();
        if (nicotinicunit != null) {
            stmt.bindString(33, nicotinicunit);
        }
 
        Double folateintake = entity.getFolateintake();
        if (folateintake != null) {
            stmt.bindDouble(34, folateintake);
        }
 
        String folateunit = entity.getFolateunit();
        if (folateunit != null) {
            stmt.bindString(35, folateunit);
        }
 
        Double sodiumintake = entity.getSodiumintake();
        if (sodiumintake != null) {
            stmt.bindDouble(36, sodiumintake);
        }
 
        String sodiumunit = entity.getSodiumunit();
        if (sodiumunit != null) {
            stmt.bindString(37, sodiumunit);
        }
 
        Double calciumintake = entity.getCalciumintake();
        if (calciumintake != null) {
            stmt.bindDouble(38, calciumintake);
        }
 
        String calciumunit = entity.getCalciumunit();
        if (calciumunit != null) {
            stmt.bindString(39, calciumunit);
        }
 
        Double ironintake = entity.getIronintake();
        if (ironintake != null) {
            stmt.bindDouble(40, ironintake);
        }
 
        String ironunit = entity.getIronunit();
        if (ironunit != null) {
            stmt.bindString(41, ironunit);
        }
 
        Double potassiumintake = entity.getPotassiumintake();
        if (potassiumintake != null) {
            stmt.bindDouble(42, potassiumintake);
        }
 
        String potassiumunit = entity.getPotassiumunit();
        if (potassiumunit != null) {
            stmt.bindString(43, potassiumunit);
        }
 
        Double zincintake = entity.getZincintake();
        if (zincintake != null) {
            stmt.bindDouble(44, zincintake);
        }
 
        String zincunit = entity.getZincunit();
        if (zincunit != null) {
            stmt.bindString(45, zincunit);
        }
 
        Double magnesiumintake = entity.getMagnesiumintake();
        if (magnesiumintake != null) {
            stmt.bindDouble(46, magnesiumintake);
        }
 
        String magnesiumunit = entity.getMagnesiumunit();
        if (magnesiumunit != null) {
            stmt.bindString(47, magnesiumunit);
        }
 
        Double copperintake = entity.getCopperintake();
        if (copperintake != null) {
            stmt.bindDouble(48, copperintake);
        }
 
        String copperunit = entity.getCopperunit();
        if (copperunit != null) {
            stmt.bindString(49, copperunit);
        }
 
        Double chomuimintake = entity.getChomuimintake();
        if (chomuimintake != null) {
            stmt.bindDouble(50, chomuimintake);
        }
 
        String chomuimunit = entity.getChomuimunit();
        if (chomuimunit != null) {
            stmt.bindString(51, chomuimunit);
        }
 
        Double mangaesiumintake = entity.getMangaesiumintake();
        if (mangaesiumintake != null) {
            stmt.bindDouble(52, mangaesiumintake);
        }
 
        String mangaesiumunit = entity.getMangaesiumunit();
        if (mangaesiumunit != null) {
            stmt.bindString(53, mangaesiumunit);
        }
 
        Double molybdenumintake = entity.getMolybdenumintake();
        if (molybdenumintake != null) {
            stmt.bindDouble(54, molybdenumintake);
        }
 
        String molybdenumunit = entity.getMolybdenumunit();
        if (molybdenumunit != null) {
            stmt.bindString(55, molybdenumunit);
        }
 
        Double iodineintake = entity.getIodineintake();
        if (iodineintake != null) {
            stmt.bindDouble(56, iodineintake);
        }
 
        String iodineunit = entity.getIodineunit();
        if (iodineunit != null) {
            stmt.bindString(57, iodineunit);
        }
 
        Double phosphrusintake = entity.getPhosphrusintake();
        if (phosphrusintake != null) {
            stmt.bindDouble(58, phosphrusintake);
        }
 
        String phosphrusunit = entity.getPhosphrusunit();
        if (phosphrusunit != null) {
            stmt.bindString(59, phosphrusunit);
        }
 
        Double seleniumintake = entity.getSeleniumintake();
        if (seleniumintake != null) {
            stmt.bindDouble(60, seleniumintake);
        }
 
        String seleniumunit = entity.getSeleniumunit();
        if (seleniumunit != null) {
            stmt.bindString(61, seleniumunit);
        }
 
        Double fluorineintake = entity.getFluorineintake();
        if (fluorineintake != null) {
            stmt.bindDouble(62, fluorineintake);
        }
 
        String fluorineunit = entity.getFluorineunit();
        if (fluorineunit != null) {
            stmt.bindString(63, fluorineunit);
        }
 
        Double cholesterolintake = entity.getCholesterolintake();
        if (cholesterolintake != null) {
            stmt.bindDouble(64, cholesterolintake);
        }
 
        String cholesterolunit = entity.getCholesterolunit();
        if (cholesterolunit != null) {
            stmt.bindString(65, cholesterolunit);
        }
 
        Double saturatedintake = entity.getSaturatedintake();
        if (saturatedintake != null) {
            stmt.bindDouble(66, saturatedintake);
        }
 
        String saturatedunit = entity.getSaturatedunit();
        if (saturatedunit != null) {
            stmt.bindString(67, saturatedunit);
        }
 
        Double acidregurgitationintake = entity.getAcidregurgitationintake();
        if (acidregurgitationintake != null) {
            stmt.bindDouble(68, acidregurgitationintake);
        }
 
        String acidregurgitationunit = entity.getAcidregurgitationunit();
        if (acidregurgitationunit != null) {
            stmt.bindString(69, acidregurgitationunit);
        }
 
        Double biotinintake = entity.getBiotinintake();
        if (biotinintake != null) {
            stmt.bindDouble(70, biotinintake);
        }
 
        String biotinunit = entity.getBiotinunit();
        if (biotinunit != null) {
            stmt.bindString(71, biotinunit);
        }
 
        Double cholineintake = entity.getCholineintake();
        if (cholineintake != null) {
            stmt.bindDouble(72, cholineintake);
        }
 
        String cholineunit = entity.getCholineunit();
        if (cholineunit != null) {
            stmt.bindString(73, cholineunit);
        }
 
        Integer temp_eatingrecordid = entity.getTemp_eatingrecordid();
        if (temp_eatingrecordid != null) {
            stmt.bindLong(74, temp_eatingrecordid);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public EatingAnalysis readEntity(Cursor cursor, int offset) {
        EatingAnalysis entity = new EatingAnalysis( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getDouble(offset + 1), // energyintake
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // energyunit
            cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3), // moistureintake
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // moistureunit
            cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5), // proteinintake
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // proteinunit
            cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7), // fatintake
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // fatunit
            cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9), // fiberintake
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // fiberunit
            cursor.isNull(offset + 11) ? null : cursor.getDouble(offset + 11), // carbohydrateintake
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // carbohydrateunit
            cursor.isNull(offset + 13) ? null : cursor.getDouble(offset + 13), // vitaminaintake
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // vitaminaunit
            cursor.isNull(offset + 15) ? null : cursor.getDouble(offset + 15), // vitaminb1intake
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // vitaminb1unit
            cursor.isNull(offset + 17) ? null : cursor.getDouble(offset + 17), // vitaminb2intake
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // vitaminb2unit
            cursor.isNull(offset + 19) ? null : cursor.getDouble(offset + 19), // vitaminb6intake
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // vitaminb6unit
            cursor.isNull(offset + 21) ? null : cursor.getDouble(offset + 21), // vitaminb12intake
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // vitaminb12unit
            cursor.isNull(offset + 23) ? null : cursor.getDouble(offset + 23), // vitamincintake
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // vitamincunit
            cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25), // vitamindintake
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // vitamindunit
            cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27), // vitamineintake
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // vitaminunit
            cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29), // vitaminkintake
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // vitaminkunit
            cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31), // nicotinicacidintake
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // nicotinicunit
            cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33), // folateintake
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // folateunit
            cursor.isNull(offset + 35) ? null : cursor.getDouble(offset + 35), // sodiumintake
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // sodiumunit
            cursor.isNull(offset + 37) ? null : cursor.getDouble(offset + 37), // calciumintake
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // calciumunit
            cursor.isNull(offset + 39) ? null : cursor.getDouble(offset + 39), // ironintake
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // ironunit
            cursor.isNull(offset + 41) ? null : cursor.getDouble(offset + 41), // potassiumintake
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // potassiumunit
            cursor.isNull(offset + 43) ? null : cursor.getDouble(offset + 43), // zincintake
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // zincunit
            cursor.isNull(offset + 45) ? null : cursor.getDouble(offset + 45), // magnesiumintake
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // magnesiumunit
            cursor.isNull(offset + 47) ? null : cursor.getDouble(offset + 47), // copperintake
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // copperunit
            cursor.isNull(offset + 49) ? null : cursor.getDouble(offset + 49), // chomuimintake
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // chomuimunit
            cursor.isNull(offset + 51) ? null : cursor.getDouble(offset + 51), // mangaesiumintake
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // mangaesiumunit
            cursor.isNull(offset + 53) ? null : cursor.getDouble(offset + 53), // molybdenumintake
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // molybdenumunit
            cursor.isNull(offset + 55) ? null : cursor.getDouble(offset + 55), // iodineintake
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // iodineunit
            cursor.isNull(offset + 57) ? null : cursor.getDouble(offset + 57), // phosphrusintake
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // phosphrusunit
            cursor.isNull(offset + 59) ? null : cursor.getDouble(offset + 59), // seleniumintake
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // seleniumunit
            cursor.isNull(offset + 61) ? null : cursor.getDouble(offset + 61), // fluorineintake
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // fluorineunit
            cursor.isNull(offset + 63) ? null : cursor.getDouble(offset + 63), // cholesterolintake
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // cholesterolunit
            cursor.isNull(offset + 65) ? null : cursor.getDouble(offset + 65), // saturatedintake
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // saturatedunit
            cursor.isNull(offset + 67) ? null : cursor.getDouble(offset + 67), // acidregurgitationintake
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // acidregurgitationunit
            cursor.isNull(offset + 69) ? null : cursor.getDouble(offset + 69), // biotinintake
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // biotinunit
            cursor.isNull(offset + 71) ? null : cursor.getDouble(offset + 71), // cholineintake
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // cholineunit
            cursor.isNull(offset + 73) ? null : cursor.getInt(offset + 73) // temp_eatingrecordid
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, EatingAnalysis entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setEnergyintake(cursor.isNull(offset + 1) ? null : cursor.getDouble(offset + 1));
        entity.setEnergyunit(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMoistureintake(cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3));
        entity.setMoistureunit(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setProteinintake(cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5));
        entity.setProteinunit(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFatintake(cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7));
        entity.setFatunit(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setFiberintake(cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9));
        entity.setFiberunit(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCarbohydrateintake(cursor.isNull(offset + 11) ? null : cursor.getDouble(offset + 11));
        entity.setCarbohydrateunit(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setVitaminaintake(cursor.isNull(offset + 13) ? null : cursor.getDouble(offset + 13));
        entity.setVitaminaunit(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setVitaminb1intake(cursor.isNull(offset + 15) ? null : cursor.getDouble(offset + 15));
        entity.setVitaminb1unit(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setVitaminb2intake(cursor.isNull(offset + 17) ? null : cursor.getDouble(offset + 17));
        entity.setVitaminb2unit(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setVitaminb6intake(cursor.isNull(offset + 19) ? null : cursor.getDouble(offset + 19));
        entity.setVitaminb6unit(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setVitaminb12intake(cursor.isNull(offset + 21) ? null : cursor.getDouble(offset + 21));
        entity.setVitaminb12unit(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setVitamincintake(cursor.isNull(offset + 23) ? null : cursor.getDouble(offset + 23));
        entity.setVitamincunit(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setVitamindintake(cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25));
        entity.setVitamindunit(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setVitamineintake(cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27));
        entity.setVitaminunit(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setVitaminkintake(cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29));
        entity.setVitaminkunit(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setNicotinicacidintake(cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31));
        entity.setNicotinicunit(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setFolateintake(cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33));
        entity.setFolateunit(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setSodiumintake(cursor.isNull(offset + 35) ? null : cursor.getDouble(offset + 35));
        entity.setSodiumunit(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCalciumintake(cursor.isNull(offset + 37) ? null : cursor.getDouble(offset + 37));
        entity.setCalciumunit(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setIronintake(cursor.isNull(offset + 39) ? null : cursor.getDouble(offset + 39));
        entity.setIronunit(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setPotassiumintake(cursor.isNull(offset + 41) ? null : cursor.getDouble(offset + 41));
        entity.setPotassiumunit(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setZincintake(cursor.isNull(offset + 43) ? null : cursor.getDouble(offset + 43));
        entity.setZincunit(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setMagnesiumintake(cursor.isNull(offset + 45) ? null : cursor.getDouble(offset + 45));
        entity.setMagnesiumunit(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setCopperintake(cursor.isNull(offset + 47) ? null : cursor.getDouble(offset + 47));
        entity.setCopperunit(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setChomuimintake(cursor.isNull(offset + 49) ? null : cursor.getDouble(offset + 49));
        entity.setChomuimunit(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setMangaesiumintake(cursor.isNull(offset + 51) ? null : cursor.getDouble(offset + 51));
        entity.setMangaesiumunit(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setMolybdenumintake(cursor.isNull(offset + 53) ? null : cursor.getDouble(offset + 53));
        entity.setMolybdenumunit(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setIodineintake(cursor.isNull(offset + 55) ? null : cursor.getDouble(offset + 55));
        entity.setIodineunit(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setPhosphrusintake(cursor.isNull(offset + 57) ? null : cursor.getDouble(offset + 57));
        entity.setPhosphrusunit(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setSeleniumintake(cursor.isNull(offset + 59) ? null : cursor.getDouble(offset + 59));
        entity.setSeleniumunit(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setFluorineintake(cursor.isNull(offset + 61) ? null : cursor.getDouble(offset + 61));
        entity.setFluorineunit(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setCholesterolintake(cursor.isNull(offset + 63) ? null : cursor.getDouble(offset + 63));
        entity.setCholesterolunit(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setSaturatedintake(cursor.isNull(offset + 65) ? null : cursor.getDouble(offset + 65));
        entity.setSaturatedunit(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setAcidregurgitationintake(cursor.isNull(offset + 67) ? null : cursor.getDouble(offset + 67));
        entity.setAcidregurgitationunit(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setBiotinintake(cursor.isNull(offset + 69) ? null : cursor.getDouble(offset + 69));
        entity.setBiotinunit(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setCholineintake(cursor.isNull(offset + 71) ? null : cursor.getDouble(offset + 71));
        entity.setCholineunit(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setTemp_eatingrecordid(cursor.isNull(offset + 73) ? null : cursor.getInt(offset + 73));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(EatingAnalysis entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(EatingAnalysis entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
