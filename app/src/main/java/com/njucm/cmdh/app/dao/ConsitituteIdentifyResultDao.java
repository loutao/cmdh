package com.njucm.cmdh.app.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.njucm.cmdh.app.domain.ConsitituteIdentifyResult;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table CONSITITUTE_IDENTIFY_RESULT.
*/
public class ConsitituteIdentifyResultDao extends AbstractDao<ConsitituteIdentifyResult, Long> {

    public static final String TABLENAME = "CONSITITUTE_IDENTIFY_RESULT";

    /**
     * Properties of entity ConsitituteIdentifyResult.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Identifyresultid = new Property(1, Integer.class, "identifyresultid", false, "IDENTIFYRESULTID");
        public final static Property Temp_userid = new Property(2, String.class, "temp_userid", false, "TEMP_USERID");
        public final static Property Temp_physiqueinfoid = new Property(3, Integer.class, "temp_physiqueinfoid", false, "TEMP_PHYSIQUEINFOID");
        public final static Property Constituteidentifytime = new Property(4, String.class, "constituteidentifytime", false, "CONSTITUTEIDENTIFYTIME");
        public final static Property Constituteidentifyremarks = new Property(5, String.class, "constituteidentifyremarks", false, "CONSTITUTEIDENTIFYREMARKS");
        public final static Property Constituteidentifyresult = new Property(6, String.class, "constituteidentifyresult", false, "CONSTITUTEIDENTIFYRESULT");
        public final static Property Constituteidentifyflag = new Property(7,Integer.class,"constituteldentifyflag",false,"CONSTITUTEIDENTIFYFLAG");
    };


    public ConsitituteIdentifyResultDao(DaoConfig config) {
        super(config);
    }
    
    public ConsitituteIdentifyResultDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'CONSITITUTE_IDENTIFY_RESULT' (" + //
                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "'IDENTIFYRESULTID' INTEGER," + // 1: identifyresultid
                "'TEMP_USERID' INTEGER," + // 2: temp_userid
                "'TEMP_PHYSIQUEINFOID' INTEGER," + // 3: temp_physiqueinfoid
                "'CONSTITUTEIDENTIFYTIME' INTEGER," + // 4: constituteidentifytime
                "'CONSTITUTEIDENTIFYREMARKS' TEXT," + // 5: constituteidentifyremarks
                "'CONSTITUTEIDENTIFYRESULT' TEXT," +  // 6: constituteidentifyresult
                "'CONSTITUTEIDENTIFYFLAG' INTEGER);");// 7:constituteidentifyflag
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'CONSITITUTE_IDENTIFY_RESULT'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ConsitituteIdentifyResult entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer identifyresultid = entity.getIdentifyresultid();
        if (identifyresultid != null) {
            stmt.bindLong(2, identifyresultid);
        }
 
        String temp_userid = entity.getTemp_userid();
        if (temp_userid != null) {
            stmt.bindString(3, temp_userid);
        }
 
        Integer temp_physiqueinfoid = entity.getTemp_physiqueinfoid();
        if (temp_physiqueinfoid != null) {
            stmt.bindLong(4, temp_physiqueinfoid);
        }
 
        String constituteidentifytime = entity.getConstituteidentifytime();
        if (constituteidentifytime != null) {
            stmt.bindString(5, constituteidentifytime);
        }
 
        String constituteidentifyremarks = entity.getConstituteidentifyremarks();
        if (constituteidentifyremarks != null) {
            stmt.bindString(6, constituteidentifyremarks);
        }
 
        String constituteidentifyresult = entity.getConstituteidentifyresult();
        if (constituteidentifyresult != null) {
            stmt.bindString(7, constituteidentifyresult);
        }
        Integer constituteldentifyflag = entity.getConstituteldentifyflag();
        if(constituteldentifyflag!=null){
            stmt.bindLong(8,constituteldentifyflag);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public ConsitituteIdentifyResult readEntity(Cursor cursor, int offset) {
        ConsitituteIdentifyResult entity = new ConsitituteIdentifyResult( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // identifyresultid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // temp_userid
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // temp_physiqueinfoid
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // constituteidentifytime
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // constituteidentifyremarks
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // constituteidentifyresult
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7) //constituteldentifyflag
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ConsitituteIdentifyResult entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setIdentifyresultid(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setTemp_userid(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTemp_physiqueinfoid(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setConstituteidentifytime(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setConstituteidentifyremarks(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setConstituteidentifyresult(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setConstituteldentifyflag(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(ConsitituteIdentifyResult entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(ConsitituteIdentifyResult entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
